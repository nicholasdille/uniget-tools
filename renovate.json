{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:base"
  ],

  "enabledManagers": [
    "dockerfile",
    "docker-compose",
    "github-actions",
    "regex"
  ],

  "docker": {
    "pinDigests": true
  },
  "rebaseWhen": "never",
  "rebaseLabel": "renovate/rebase",

  "major": {
    "labels": ["type/renovate", "bump/major"]
  },
  "minor": {
    "labels": ["type/renovate", "bump/minor"]
  },
  "patch": {
    "labels": ["type/renovate", "bump/patch"]
  },
  "pin": {
    "labels": ["type/renovate", "bump/pin"]
  },
  "digest": {
    "labels": ["type/renovate", "bump/digest"]
  },

  "packageRules": [
    {
      "matchFiles": [ "^docker-setup.(sh|ps1)$" ],
      "updateTypes": ["pin", "digest", "patch", "minor", "major"],
      "automerge": true
    },
    {
      "matchDatasources": [ "docker" ],
      "updateTypes": ["pin", "digest"],
      "automerge": true
    },
    {
      "matchFiles": [ "^env/amazonlinux-2/Dockerfile$" ],
      "matchDatasources": [ "docker" ],
      "matchPackageNames": [ "amazonlinux" ],
      "allowedVersions": "<=2.0"
    },
    {
      "matchFiles": [ "^env/centos-7/Dockerfile$" ],
      "matchDatasources": [ "docker" ],
      "matchPackageNames": [ "centos" ],
      "allowedVersions": "<=7"
    },
    {
      "matchFiles": [ "^env/centos-8/Dockerfile$" ],
      "matchDatasources": [ "docker" ],
      "matchPackageNames": [ "centos" ],
      "allowedVersions": "<=8"
    },
    {
      "matchFiles": [ "^env/debian-11/Dockerfile$" ],
      "matchDatasources": [ "docker" ],
      "matchPackageNames": [ "debian" ],
      "allowedVersions": "<=11"
    },
    {
      "matchFiles": [ "^env/fedora-35/Dockerfile$" ],
      "matchDatasources": [ "docker" ],
      "matchPackageNames": [ "fedora" ],
      "allowedVersions": "<=35"
    },
    {
      "matchFiles": [ "^env/opensuse-leap-15/Dockerfile$" ],
      "matchDatasources": [ "docker" ],
      "matchPackageNames": [ "opensuse/leap" ],
      "allowedVersions": "/^[0-9]+\\.[0-9]+(\\.[0-9]+)?$/"
    },
    {
      "matchFiles": [ "^env/rockylinux-8/Dockerfile$" ],
      "matchDatasources": [ "docker" ],
      "matchPackageNames": [ "rockylinux" ],
      "allowedVersions": "<=8"
    },
    {
      "matchFiles": [ "^env/ubuntu-20.04/Dockerfile$" ],
      "matchDatasources": [ "docker" ],
      "matchPackageNames": [ "ubuntu" ],
      "allowedVersions": "20.04"
    },
    {
      "matchFiles": [ "^env/ubuntu-21.04/Dockerfile$" ],
      "matchDatasources": [ "docker" ],
      "matchPackageNames": [ "ubuntu" ],
      "allowedVersions": "21.04"
    },
    {
      "matchFiles": [ "^env/ubuntu-22.04/Dockerfile$" ],
      "matchDatasources": [ "docker" ],
      "matchPackageNames": [ "ubuntu" ],
      "allowedVersions": "22.04"
    }
  ],

  "regexManagers": [
    {
      "fileMatch": [ "^.github/workflows/release.yml$" ],
      "matchStrings": [ "SEMVER_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "fsaintjacques/semver-tool",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [ "^.github/workflows/release.yml$" ],
      "matchStrings": [ "SHELLCHECK_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "koalaman/shellcheck",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "ARKADE_VERSION=(?<currentValue>.*?)\n", "ArkadeVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "alexellis/arkade",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "BUILDAH_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "nicholasdille/buildah-static",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "BUILDKIT_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "moby/buildkit",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "BUILDX_VERSION=(?<currentValue>.*?)\n", "BuildxVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "docker/buildx",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "CLUSTERAWSADM_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "kubernetes-sigs/cluster-api-provider-aws",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "CLUSTERCTL_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "kubernetes-sigs/cluster-api",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "CNI_ISOLATION_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "AkihiroSuda/cni-isolation",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "CNI_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "containernetworking/plugins",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "CONMON_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "nicholasdille/conmon-static",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "CONTAINERD_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "containerd/containerd",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "CONTAINERSSH=(?<currentValue>.*?)\n", "ContainersshVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "ContainerSSH/ContainerSSH",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "COSIGN_VERSION=(?<currentValue>.*?)\n", "CosignVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "sigstore/cosign",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "CRICTL_VERSION=(?<currentValue>.*?)\n", "CrictlVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "kubernetes-sigs/cri-tools",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "CRANE_VERSION=(?<currentValue>.*?)\n", "CraneVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "google/go-containerregistry",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "CRUN_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "nicholasdille/crun-static",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$",
      "versioningTemplate": "loose"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "CTOP_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "bcicen/ctop",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "DASEL_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "TomWright/dasel",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "DIVE_VERSION=(?<currentValue>.*?)\n", "DiveVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "wagoodman/dive",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "DOCKER_COMPOSE_V1_VERSION=(?<currentValue>.*?)\n", "DockerComposeV1Version = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "docker/compose",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^\\d+\\.\\d+\\.\\d+$",
      "versioningTemplate": "regex:^(?<major>1?)\\.(?<minor>\\d+?)\\.(?<patch>\\d+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "DOCKER_COMPOSE_V2_VERSION=(?<currentValue>.*?)\n", "DockerComposeV2Version = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "docker/compose",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "DOCKER_MACHINE_VERSION=(?<currentValue>.*?)\n", "DockerMachineVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "docker/machine",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "^DOCKER_VERSION=(?<currentValue>.*?)\n", "DockerVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "moby/moby",
      "datasourceTemplate": "github-tags",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "DOCKER_SCAN_VERSION=(?<currentValue>.*?)\n", "DockerScanVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "docker/scan-cli-plugin",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "DOCUUM_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "stepchowfun/docuum",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "DRY_VERSION=(?<currentValue>.*?)\n", "DryVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "moncho/dry",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "DUFFLE_VERSION=(?<currentValue>.*?)\n", "DuffleVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "cnabio/duffle",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "DYFF_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "homeport/dyff",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "FIRECRACKER_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "firecracker-microvm/firecracker",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "FIRECTL_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "firecracker-microvm/firectl",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "FOOTLOOSE_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "weaveworks/footloose",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "FUSE_OVERLAYFS_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "containers/fuse-overlayfs",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$",
      "versioningTemplate": "loose"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "FUSE_OVERLAYFS_SNAPSHOTTER_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "containerd/fuse-overlayfs-snapshotter",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "GLOW_VERSION=(?<currentValue>.*?)\n", "GlowVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "charmbracelet/glow",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "GO_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "golang",
      "datasourceTemplate": "docker",
      "extractVersionTemplate": "^(?<version>\\d+\\.\\d+\\.\\d+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "GVISOR_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "google/gvisor",
      "datasourceTemplate": "github-tags",
      "extractVersionTemplate": "^release-(?<version>.+?)\\.0$",
      "versioningTemplate": "loose"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "IGNITE_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "weaveworks/ignite",
      "datasourceTemplate": "github-tags",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "HELM_VERSION=(?<currentValue>.*?)\n", "HelmVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "helm/helm",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "HCLOUD_VERSION=(?<currentValue>.*?)\n", "HcloudVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "hetznercloud/cli",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "HELMFILE_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "roboll/helmfile",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "HUB_TOOL_VERSION=(?<currentValue>.*?)\n", "HubToolVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "docker/hub-tool",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "IMGCRYPT_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "containerd/imgcrypt",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "IMG_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "genuinetools/img",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "IPFS_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "ipfs/go-ipfs",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "IPTABLES_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "nicholasdille/centos-iptables-legacy",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "JQ_VERSION=(?<currentValue>.*?)\n", "JqVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "stedolan/jq",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^jq-(?<version>.+?)$",
      "versioningTemplate": "loose"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "JP_VERSION=(?<currentValue>.*?)\n", "JpVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "jmespath/jp",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "JWT_VERSION=(?<currentValue>.*?)\n", "JwtVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "mike-engel/jwt-cli",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "K3D_VERSION=(?<currentValue>.*?)\n", "K3dVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "rancher/k3d",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "K3S_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "k3s-io/k3s",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$",
      "versioningTemplate": "loose"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "K3SUP_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "alexellis/k3sup",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "K9S_VERSION=(?<currentValue>.*?)\n", "K9sVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "derailed/k9s",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "KAPP_VERSION=(?<currentValue>.*?)\n", "KappVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "vmware-tanzu/carvel-kapp",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "KIND_VERSION=(?<currentValue>.*?)\n", "KindVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "kubernetes-sigs/kind",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "KOMPOSE_VERSION=(?<currentValue>.*?)\n", "KomposeVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "kubernetes/kompose",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$",
      "versioningTemplate": "loose"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "KUBECTL_VERSION=(?<currentValue>.*?)\n", "KubectlVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "kubernetes/kubernetes",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "KUBECTL_BUILD_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "vmware-tanzu/buildkit-cli-for-kubectl",
      "datasourceTemplate": "github-tags",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "KUBECTL_FREE_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "makocchi-git/kubectl-free",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "KUBECTL_RESOURCES_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "howardjohn/kubectl-resources",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "KUBEFIRE_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "innobead/kubefire",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "KUBELETCTL_VERSION=(?<currentValue>.*?)\n", "KubeletctlVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "cyberark/kubeletctl",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$",
      "versioningTemplate": "loose"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "KUBESWITCH_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "danielb42/kubeswitch",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "KREW_VERSION=(?<currentValue>.*?)\n", "KrewVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "kubernetes-sigs/krew",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "KUSTOMIZE_VERSION=(?<currentValue>.*?)\n", "KustomizeVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "kubernetes-sigs/kustomize",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^kustomize/v(?<version>.+)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "LAZYDOCKER_VERSION=(?<currentValue>.*?)\n", "LazydockerVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "jesseduffield/lazydocker",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+)$",
      "versioningTemplate": "loose"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "LAZYGIT_VERSION=(?<currentValue>.*?)\n", "LazygitVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "jesseduffield/lazygit",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "MANIFEST_TOOL_VERSION=(?<currentValue>.*?)\n", "ManifestToolVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "estesp/manifest-tool",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "MINIKUBE_VERSION=(?<currentValue>.*?)\n", "MinikubeVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "kubernetes/minikube",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "MITMPROXY_VERSION=(?<currentValue>.*?)\n", "MitmproxyVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "mitmproxy/mitmproxy",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "NERDCTL_VERSION=(?<currentValue>.*?)\n", "NerdctlVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "containerd/nerdctl",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "NOROUTER_VERSION=(?<currentValue>.*?)\n", "NorouterVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "norouter/norouter",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "NOTATION_VERSION=(?<currentValue>.*?)\n", "NotationVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "notaryproject/notation",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "OCI_IMAGE_TOOL_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "opencontainers/image-tools",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "OCI_RUNTIME_TOOL_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "opencontainers/runtime-tools",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "ORAS_VERSION=(?<currentValue>.*?)\n", "OrasVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "oras-project/oras",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "PATAT_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "jaspervdj/patat",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$",
      "versioningTemplate": "loose"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "PODMAN_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "nicholasdille/podman-static",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "PORTAINER_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "portainer/portainer",
      "datasourceTemplate": "github-releases"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "PORTER_VERSION=(?<currentValue>.*?)\n", "PorterVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "getporter/porter",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "QEMU_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "nicholasdille/qemu-static",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "REGCLIENT_VERSION=(?<currentValue>.*?)\n", "RegclientVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "regclient/regclient",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "ROOTLESSKIT_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "rootless-containers/rootlesskit",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "RUNC_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "opencontainers/runc",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "RUST_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "rust",
      "datasourceTemplate": "docker",
      "extractVersionTemplate": "^(?<version>\\d+\\.\\d+\\.\\d+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "SKOPEO_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "nicholasdille/skopeo-static",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "SLIRP4NETNS_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "rootless-containers/slirp4netns",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "SOPS_VERSION=(?<currentValue>.*?)\n", "SopsVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "mozilla/sops",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "SSHOCKER_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "lima-vm/sshocker",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "STARGZ_SNAPSHOTTER_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "containerd/stargz-snapshotter",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "TRIVY_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "aquasecurity/trivy",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$" ],
      "matchStrings": [ "UMOCI_VERSION=(?<currentValue>.*?)\n" ],
      "depNameTemplate": "opencontainers/umoci",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "YQ_VERSION=(?<currentValue>.*?)\n", "YqVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "mikefarah/yq",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    },
    {
      "fileMatch": [ "^docker-setup.sh$", "^docker-setup.ps1$" ],
      "matchStrings": [ "YTT_VERSION=(?<currentValue>.*?)\n", "YttVersion = \"(?<currentValue>.*?)\"" ],
      "depNameTemplate": "vmware-tanzu/carvel-ytt",
      "datasourceTemplate": "github-releases",
      "extractVersionTemplate": "^v(?<version>.+?)$"
    }
  ]
}
